# Generated by Django 4.2.5 on 2023-12-12 16:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_reset_password_email_token_expired', models.BooleanField(default=True)),
                ('is_reset_password_token_expired', models.BooleanField(default=True)),
                ('role', models.CharField(blank=True, choices=[('trainer', 'Trainer'), ('student', 'Student'), ('coordinator', 'Coordinator')], max_length=20, null=True)),
                ('is_reset_password_needed', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('course_type', models.CharField(max_length=50)),
                ('next_possible_course', models.ManyToManyField(blank=True, related_name='next_course', to='recuperari.course')),
            ],
        ),
        migrations.CreateModel(
            name='CourseDays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('luni', 'Luni'), ('marti', 'Marti'), ('miercuri', 'Miercuri'), ('joi', 'Joi'), ('vineri', 'Vineri'), ('sambata', 'Sambata'), ('duminica', 'Duminica')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CourseSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=50)),
                ('total_sessions', models.SmallIntegerField()),
                ('first_day_of_session', models.DateField()),
                ('last_day_of_session', models.DateField()),
                ('day', models.CharField(choices=[('luni', 'Luni'), ('marti', 'Marti'), ('miercuri', 'Miercuri'), ('joi', 'Joi'), ('vineri', 'Vineri'), ('sambata', 'Sambata'), ('duminica', 'Duminica')], max_length=15)),
                ('time', models.TimeField()),
                ('course_type', models.CharField(choices=[('onl', 'Online'), ('hbr', 'Hibrid'), ('sed', 'Sediu')], max_length=10)),
                ('online_link', models.CharField(blank=True, max_length=500, null=True)),
                ('can_be_used_as_online_make_up_for_other_schools', models.BooleanField(default=True)),
                ('available_places_for_make_up_for_other_schools', models.IntegerField(default=3)),
                ('available_places_for_make_up_for_current_school', models.IntegerField(default=3)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone_number1', models.CharField(max_length=50)),
                ('phone_number2', models.CharField(blank=True, max_length=50, null=True)),
                ('email1', models.CharField(max_length=50)),
                ('email2', models.CharField(blank=True, max_length=50, null=True)),
                ('active_account', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('phone_contact', models.CharField(max_length=15)),
                ('email_contact', models.EmailField(max_length=254)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_school', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SentEmailsMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_on_time', models.TimeField(auto_now_add=True)),
                ('sent_on_date', models.DateField(auto_now_add=True)),
                ('sent_to_mail', models.CharField(max_length=100)),
                ('sent_mail_subject', models.TextField(max_length=500)),
                ('sent_mail_body', models.TextField(max_length=500)),
                ('has_errors', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SentWhatsappMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_on_time', models.TimeField(auto_now_add=True)),
                ('sent_on_date', models.DateField(auto_now_add=True)),
                ('sent_to_number', models.CharField(max_length=50)),
                ('sent_message', models.TextField(max_length=500)),
                ('has_errors', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to='recuperari.parent')),
            ],
        ),
        migrations.CreateModel(
            name='TimeOff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_day', models.DateField()),
                ('end_day', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('phone_contact', models.CharField(max_length=15)),
                ('email_contact', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrainerScheduleInterval',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('available_from', models.DateField()),
                ('available_to', models.DateField()),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recuperari.school')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recuperari.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='TrainerSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('available_hour_from', models.TimeField()),
                ('available_hour_to', models.TimeField()),
                ('online_only', models.BooleanField(default=False)),
                ('available_day', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recuperari.coursedays')),
                ('trainer_interval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='recuperari.trainerscheduleinterval')),
            ],
        ),
        migrations.CreateModel(
            name='StudentCourseSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('course_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recuperari.courseschedule')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recuperari.student')),
            ],
            options={
                'unique_together': {('course_schedule', 'student')},
            },
        ),
        migrations.CreateModel(
            name='SessionsDescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('min_session_no_description', models.IntegerField()),
                ('max_session_no_description', models.IntegerField()),
                ('description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_descriptions', to='recuperari.course')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_passed', models.BooleanField(default=False)),
                ('date', models.DateField()),
                ('session_no', models.SmallIntegerField()),
                ('course_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recuperari.courseschedule')),
                ('session_trainer', models.ForeignKey(blank=True, help_text='In case other trainer will replace a trainer', null=True, on_delete=django.db.models.deletion.SET_NULL, to='recuperari.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(default='room name', max_length=10)),
                ('capacity', models.SmallIntegerField()),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recuperari.school')),
            ],
        ),
        migrations.AddField(
            model_name='parent',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_students', to='recuperari.school'),
        ),
        migrations.AddField(
            model_name='parent',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MakeUp',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('online_link', models.CharField(max_length=500)),
                ('type', models.CharField(blank=True, choices=[('onl', 'Online'), ('hbr', 'Hibrid'), ('sed', 'Sediu')], max_length=50, null=True)),
                ('duration_in_minutes', models.SmallIntegerField(default=30)),
                ('make_up_approved', models.BooleanField(default=False)),
                ('make_up_completed', models.BooleanField(default=False)),
                ('can_be_used_as_online_make_up_for_other_schools', models.BooleanField(default=True)),
                ('available_places_for_make_up_for_other_schools', models.IntegerField(default=3)),
                ('available_places_for_make_up_for_current_school', models.IntegerField(default=3)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recuperari.session')),
                ('trainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recuperari.trainer')),
            ],
        ),
        migrations.AddField(
            model_name='courseschedule',
            name='classroom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recuperari.room'),
        ),
        migrations.AddField(
            model_name='courseschedule',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_schedules', to='recuperari.course'),
        ),
        migrations.AddField(
            model_name='courseschedule',
            name='default_trainer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recuperari.trainer'),
        ),
        migrations.AddField(
            model_name='courseschedule',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_courses', to='recuperari.school'),
        ),
        migrations.AddField(
            model_name='courseschedule',
            name='students',
            field=models.ManyToManyField(related_name='course_schedule_students', through='recuperari.StudentCourseSchedule', to='recuperari.student'),
        ),
        migrations.CreateModel(
            name='CourseDescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('short_description', models.TextField(max_length=100)),
                ('long_description', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_description', to='recuperari.course')),
            ],
        ),
        migrations.CreateModel(
            name='AbsentStudent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_absence_in_crm', models.BooleanField(default=False)),
                ('is_absence_communicated_to_parent', models.BooleanField(default=False)),
                ('is_absent_for_make_up', models.BooleanField(default=False)),
                ('is_absent_completed', models.BooleanField(default=False)),
                ('is_absence_completed', models.BooleanField(default=False, help_text='if make up happened and student was not absent')),
                ('has_make_up_scheduled', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, max_length=500, null=True)),
                ('absent_on_session', models.ForeignKey(help_text='get all absences for session', on_delete=django.db.models.deletion.CASCADE, related_name='session_absences', to='recuperari.session')),
                ('absent_participant', models.ForeignKey(help_text='get all absences for student', on_delete=django.db.models.deletion.CASCADE, related_name='student_absences', to='recuperari.student')),
                ('choosed_course_session_for_absence', models.ForeignKey(blank=True, help_text='get absences setted up for session', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_session_absence', to='recuperari.session')),
                ('choosed_make_up_session_for_absence', models.ForeignKey(blank=True, help_text='get absences setted up for make up', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='make_up_absences', to='recuperari.makeup')),
            ],
        ),
    ]
